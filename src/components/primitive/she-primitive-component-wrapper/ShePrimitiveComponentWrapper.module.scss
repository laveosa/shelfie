@use "@/styles/variables" as vars;

$iconSize: 20px;

.shePrimitiveComponentWrapper {
  max-width: vars.$maxWidth + px;
  width: 100%;

  .shePrimitiveComponentWrapperContainer {
    position: relative;

    .shePrimitiveComponentWrapperControl {
      position: relative;
      display: flex;
      align-items: center;
      gap: 4px;
      transition: all 160ms ease-in-out;

      .shePrimitiveComponentWrapperContext {
        display: flex;
        flex-grow: 1;
        width: 100%;
      }
    }
  }
}

// ======================================================== ICON

.shePrimitiveComponentWrapper {
  .iconBlock {
    position: relative;
    top: 11px;
    margin-right: 4px;
    color: vars.$subtextColor;
    max-width: $iconSize;
    min-width: $iconSize;
    max-height: $iconSize;
    min-height: $iconSize;
  }
}

// ======================================================== FULL WIDTH

.shePrimitiveComponentWrapper.fullWidth {
  max-width: none;
  width: 100% !important;
}

// ======================================================== REQUIRED

.shePrimitiveComponentWrapper.required {
  > .shePrimitiveComponentWrapperContainer:before {
    position: absolute;
    left: -8px;
    top: -13px;
    margin-right: 0;
    color: vars.$colorRed;
    content: "*";
    display: inline;
  }
}

// ======================================================== WITH ICON

.shePrimitiveComponentWrapper {
  &:global(.withIconIn) {
    .shePrimitiveComponentWrapperContainer {
      .shePrimitiveComponentWrapperControl {
        .iconBlock {
          position: absolute;
          top: 11px;
          left: 8px;
          z-index: 1;
        }

        .shePrimitiveComponentWrapperContext {
          :global(.componentTriggerElement) {
            padding-left: 32px;
          }
        }
      }
    }
  }

  &:global(.withIconOut) {
    .contextLengthLimits,
    .descriptionBlock,
    .errorBlock {
      padding-left: 23px;
    }

    .descriptionBlockWithIcon {
      padding-left: 0;
    }

    .errorBlockWithIcon {
      padding-left: 0;
    }
  }
}

// ======================================================== WITH CLEAR BUTTON

.shePrimitiveComponentWrapper {
  &:global(.withClearButtonIn) {
    .shePrimitiveComponentWrapperContainer {
      .shePrimitiveComponentWrapperControl {
        .clearButton {
          position: absolute;
          top: 10px;
          right: 8px;
          z-index: 1;
        }

        .shePrimitiveComponentWrapperContext {
          :global(.componentTriggerElement) {
            padding-right: 32px;
          }
        }
      }
    }
  }

  &:global(.withClearButtonOut) {
  }
}

// ======================================================== VIEW

.shePrimitiveComponentWrapper.card {
  border: 1px solid vars.$brdColor;
  padding: vars.$paddingSmall;
  border-radius: vars.$brdR_075;
}
